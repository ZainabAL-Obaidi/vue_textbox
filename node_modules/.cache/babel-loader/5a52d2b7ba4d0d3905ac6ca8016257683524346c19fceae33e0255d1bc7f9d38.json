{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      inputText: '',\n      submittedTextArray: [],\n      editIndex: -1,\n      editedText: ''\n    };\n  },\n  methods: {\n    addText() {\n      if (this.inputText.trim() !== '') {\n        this.submittedTextArray.push(this.inputText);\n        this.inputText = ''; // Clear the input after adding text\n      }\n    },\n    confirmDelete(index) {\n      if (confirm(`Are you sure you want to delete \"${this.submittedTextArray[index]}\"?`)) {\n        this.deleteText(index);\n      }\n    },\n    deleteText(index) {\n      this.submittedTextArray.splice(index, 1);\n    },\n    startEdit(index) {\n      this.editIndex = index;\n      this.editedText = this.submittedTextArray[index];\n    },\n    saveEdit(index) {\n      if (this.editedText.trim() !== '') {\n        this.submittedTextArray[index] = this.editedText;\n        this.cancelEdit();\n      }\n    },\n    cancelEdit() {\n      this.editIndex = -1;\n      this.editedText = '';\n    }\n  }\n};","map":{"version":3,"names":["data","inputText","submittedTextArray","editIndex","editedText","methods","addText","trim","push","confirmDelete","index","confirm","deleteText","splice","startEdit","saveEdit","cancelEdit"],"sources":["/home/kurs/vue-textbox-example/src/components/TextBox.vue"],"sourcesContent":["<!-- src/components/TextBox.vue -->\n\n<template>\n  <div>\n    <label for=\"inputText\">Enter text:</label>\n    <div class=\"input-container\">\n      <input id=\"inputText\" type=\"text\" v-model=\"inputText\">\n      <button @click=\"addText\">Add</button>\n    </div>\n    <div class=\"output-box\" v-if=\"submittedTextArray.length > 0\">\n      <p>Text entered:</p>\n      <div class=\"text-container\">\n        <div v-for=\"(text, index) in submittedTextArray\" :key=\"index\" class=\"text-entry\">\n          <div v-if=\"editIndex !== index\" class=\"text-content\">\n            <p>{{ text }}</p>\n            <div class=\"actions\">\n              <span @click=\"confirmDelete(index)\">❌</span>\n              <span @click=\"startEdit(index)\">✏️</span>\n            </div>\n          </div>\n          <div v-else>\n            <input type=\"text\" v-model=\"editedText\" @keyup.enter=\"saveEdit(index)\" @keyup.esc=\"cancelEdit\">\n            <button @click=\"saveEdit(index)\">Save</button>\n            <button @click=\"cancelEdit\">Cancel</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      inputText: '',\n      submittedTextArray: [],\n      editIndex: -1,\n      editedText: ''\n    };\n  },\n  methods: {\n    addText() {\n      if (this.inputText.trim() !== '') {\n        this.submittedTextArray.push(this.inputText);\n        this.inputText = ''; // Clear the input after adding text\n      }\n    },\n    confirmDelete(index) {\n      if (confirm(`Are you sure you want to delete \"${this.submittedTextArray[index]}\"?`)) {\n        this.deleteText(index);\n      }\n    },\n    deleteText(index) {\n      this.submittedTextArray.splice(index, 1);\n    },\n    startEdit(index) {\n      this.editIndex = index;\n      this.editedText = this.submittedTextArray[index];\n    },\n    saveEdit(index) {\n      if (this.editedText.trim() !== '') {\n        this.submittedTextArray[index] = this.editedText;\n        this.cancelEdit();\n      }\n    },\n    cancelEdit() {\n      this.editIndex = -1;\n      this.editedText = '';\n    }\n  }\n};\n</script>\n\n<style scoped>\n.input-container {\n  display: flex;\n  align-items: center;\n  gap: 10px; /* Adjust the gap to your preference */\n}\n\n.output-box {\n  margin-top: 20px; /* Increase the margin between input and output */\n}\n\n.text-container {\n  border: 1px solid #ccc;\n  padding: 10px;\n}\n\n.text-entry {\n  border-bottom: 1px solid #ccc;\n  padding: 10px 0;\n}\n\n.text-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.actions span {\n  cursor: pointer;\n  margin-left: 5px;\n}\n\n.actions span:hover {\n  color: red; /* Change color on hover for better UX */\n}\n\n.text-entry input[type=\"text\"] {\n  width: calc(100% - 140px); /* Adjust width as per your design */\n  margin-right: 10px;\n}\n\n.text-entry button {\n  margin-right: 5px;\n}\n</style>\n"],"mappings":";AAgCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,kBAAkB,EAAE,EAAE;MACtBC,SAAS,EAAE,CAAC,CAAC;MACbC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,OAAOA,CAAA,EAAG;MACR,IAAI,IAAI,CAACL,SAAS,CAACM,IAAI,CAAC,MAAM,EAAE,EAAE;QAChC,IAAI,CAACL,kBAAkB,CAACM,IAAI,CAAC,IAAI,CAACP,SAAS,CAAC;QAC5C,IAAI,CAACA,SAAQ,GAAI,EAAE,EAAE;MACvB;IACF,CAAC;IACDQ,aAAaA,CAACC,KAAK,EAAE;MACnB,IAAIC,OAAO,CAAC,oCAAoC,IAAI,CAACT,kBAAkB,CAACQ,KAAK,CAAC,IAAI,CAAC,EAAE;QACnF,IAAI,CAACE,UAAU,CAACF,KAAK,CAAC;MACxB;IACF,CAAC;IACDE,UAAUA,CAACF,KAAK,EAAE;MAChB,IAAI,CAACR,kBAAkB,CAACW,MAAM,CAACH,KAAK,EAAE,CAAC,CAAC;IAC1C,CAAC;IACDI,SAASA,CAACJ,KAAK,EAAE;MACf,IAAI,CAACP,SAAQ,GAAIO,KAAK;MACtB,IAAI,CAACN,UAAS,GAAI,IAAI,CAACF,kBAAkB,CAACQ,KAAK,CAAC;IAClD,CAAC;IACDK,QAAQA,CAACL,KAAK,EAAE;MACd,IAAI,IAAI,CAACN,UAAU,CAACG,IAAI,CAAC,MAAM,EAAE,EAAE;QACjC,IAAI,CAACL,kBAAkB,CAACQ,KAAK,IAAI,IAAI,CAACN,UAAU;QAChD,IAAI,CAACY,UAAU,CAAC,CAAC;MACnB;IACF,CAAC;IACDA,UAAUA,CAAA,EAAG;MACX,IAAI,CAACb,SAAQ,GAAI,CAAC,CAAC;MACnB,IAAI,CAACC,UAAS,GAAI,EAAE;IACtB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}