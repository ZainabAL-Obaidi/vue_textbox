{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-681c685e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"inputText\"\n}, \"Enter text:\", -1 /* HOISTED */));\nconst _hoisted_2 = {\n  class: \"input-container\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"output-box\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"p\", null, \"Text entered:\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"text-content\"\n};\nconst _hoisted_6 = {\n  class: \"text-controls\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-trash-alt\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_9 = [_hoisted_8];\nconst _hoisted_10 = [\"onClick\"];\nconst _hoisted_11 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"i\", {\n  class: \"fas fa-edit\"\n}, null, -1 /* HOISTED */));\nconst _hoisted_12 = [_hoisted_11];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    id: \"inputText\",\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.inputText = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.inputText]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.addText && $options.addText(...args))\n  }, \"Add\")]), $data.submittedTextArray.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.submittedTextArray, (text, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"text-entry\"\n    }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"p\", null, _toDisplayString(text), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deleteText(index)\n    }, [..._hoisted_9], 8 /* PROPS */, _hoisted_7), _createElementVNode(\"button\", {\n      onClick: $event => $options.editText(index)\n    }, [..._hoisted_12], 8 /* PROPS */, _hoisted_10)])]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","for","class","key","_hoisted_8","_hoisted_11","_createElementBlock","_hoisted_1","_hoisted_2","id","type","_cache","$event","$data","inputText","onClick","args","$options","addText","submittedTextArray","length","_hoisted_3","_hoisted_4","_Fragment","_renderList","text","index","_hoisted_5","_toDisplayString","_hoisted_6","deleteText","_hoisted_9","_hoisted_7","editText","_hoisted_12","_hoisted_10","_createCommentVNode"],"sources":["/home/kurs/vue-textbox-example/src/components/TextBox.vue"],"sourcesContent":["<!-- src/components/TextBox.vue -->\n\n<template>\n  <div>\n    <label for=\"inputText\">Enter text:</label>\n    <div class=\"input-container\">\n      <input id=\"inputText\" type=\"text\" v-model=\"inputText\">\n      <button @click=\"addText\">Add</button>\n    </div>\n    <div class=\"output-box\" v-if=\"submittedTextArray.length > 0\">\n      <p>Text entered:</p>\n      <div v-for=\"(text, index) in submittedTextArray\" :key=\"index\" class=\"text-entry\">\n        <div class=\"text-content\">\n          <p>{{ text }}</p>\n        </div>\n        <div class=\"text-controls\">\n          <button @click=\"deleteText(index)\">\n            <i class=\"fas fa-trash-alt\"></i>\n          </button>\n          <button @click=\"editText(index)\">\n            <i class=\"fas fa-edit\"></i>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// Import Font Awesome icons\nimport { faTrashAlt, faEdit } from '@fortawesome/free-solid-svg-icons';\n\nexport default {\n  data() {\n    return {\n      inputText: '',\n      submittedTextArray: []\n    };\n  },\n  methods: {\n    addText() {\n      if (this.inputText.trim() !== '') {\n        this.submittedTextArray.push(this.inputText);\n        this.inputText = ''; // Clear the input after adding text\n      }\n    },\n    deleteText(index) {\n      this.submittedTextArray.splice(index, 1);\n    },\n    editText(index) {\n      // Implement edit functionality as per your requirements\n      // For simplicity, you can replace the text or open a dialog for editing\n      // Example: this.submittedTextArray[index] = 'New edited text';\n    }\n  },\n  // Register Font Awesome icons\n  // (Note: Vue 3 and Vue 2.6+ with @vue/icons plugin)\n  // You may use the \"components\" property for Vue 2.x\n  // Or the \"icons\" property for Vue 3 and Vue 2.6+ with @vue/icons plugin\n  // Refer to Font Awesome Vue documentation for details\n  // https://fontawesome.com/how-to-use/on-the-web/using-with/vuejs\n  // Or https://github.com/FortAwesome/vue-fontawesome#importing-individual-icons\n  icons: {\n    solid: {\n      // Add each icon you need here\n      trashAlt: faTrashAlt,\n      edit: faEdit,\n    },\n  },\n};\n</script>\n\n<style scoped>\n.input-container {\n  display: flex;\n  align-items: center;\n  gap: 10px; /* Adjust the gap to your preference */\n}\n\n.output-box {\n  margin-top: 20px; /* Increase the margin between input and output */\n}\n\n.text-entry {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #ccc;\n  padding: 10px;\n}\n\n.text-content {\n  flex: 1; /* Take remaining space */\n}\n\n.text-controls {\n  display: flex;\n  gap: 5px;\n}\n\n.text-controls button {\n  background: none;\n  border: none;\n  cursor: pointer;\n}\n\n.text-controls button i {\n  font-size: 18px;\n}\n\n.text-entry p {\n  margin: 0;\n}\n</style>\n"],"mappings":";;gEAIIA,mBAAA,CAA0C;EAAnCC,GAAG,EAAC;AAAW,GAAC,aAAW;;EAC7BC,KAAK,EAAC;AAAiB;;EALhCC,GAAA;EASSD,KAAK,EAAC;;gEACTF,mBAAA,CAAoB,WAAjB,eAAa;;EAETE,KAAK,EAAC;AAAc;;EAGpBA,KAAK,EAAC;AAAe;mBAflC;gEAiBYF,mBAAA,CAAgC;EAA7BE,KAAK,EAAC;AAAkB;oBAA3BE,UAAgC,C;oBAjB5C;iEAoBYJ,mBAAA,CAA2B;EAAxBE,KAAK,EAAC;AAAa;qBAAtBG,WAA2B,C;;uBAjBrCC,mBAAA,CAsBM,cArBJC,UAA0C,EAC1CP,mBAAA,CAGM,OAHNQ,UAGM,G,gBAFJR,mBAAA,CAAsD;IAA/CS,EAAE,EAAC,WAAW;IAACC,IAAI,EAAC,MAAM;IANvC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMiDC,KAAA,CAAAC,SAAS,GAAAF,MAAA;iDAATC,KAAA,CAAAC,SAAS,E,GACpDd,mBAAA,CAAqC;IAA5Be,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;KAAE,KAAG,E,GAEAH,KAAA,CAAAM,kBAAkB,CAACC,MAAM,Q,cAAvDd,mBAAA,CAeM,OAfNe,UAeM,GAdJC,UAAoB,G,kBACpBhB,mBAAA,CAYMiB,SAAA,QAvBZC,WAAA,CAWmCX,KAAA,CAAAM,kBAAkB,EAXrD,CAWmBM,IAAI,EAAEC,KAAK;yBAAxBpB,mBAAA,CAYM;MAZ4CH,GAAG,EAAEuB,KAAK;MAAExB,KAAK,EAAC;QAClEF,mBAAA,CAEM,OAFN2B,UAEM,GADJ3B,mBAAA,CAAiB,WAAA4B,gBAAA,CAAXH,IAAI,iB,GAEZzB,mBAAA,CAOM,OAPN6B,UAOM,GANJ7B,mBAAA,CAES;MAFAe,OAAK,EAAAH,MAAA,IAAEK,QAAA,CAAAa,UAAU,CAACJ,KAAK;OAhB1C,IAAAK,UAAA,kBAAAC,UAAA,GAmBUhC,mBAAA,CAES;MAFAe,OAAK,EAAAH,MAAA,IAAEK,QAAA,CAAAgB,QAAQ,CAACP,KAAK;OAnBxC,IAAAQ,WAAA,kBAAAC,WAAA,E;sCAAAC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}